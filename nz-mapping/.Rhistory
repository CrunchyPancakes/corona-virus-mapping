source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x[1,], " - ")
})
view(source_nodes_split)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[2]
})
view(source_node_ids)
source_node_ids <- unlist(source_nodes_split)
source_node_ids <- data.frame(unlist(source_nodes_split))
view(source_node_ids)
source_node_ids <- data.frame(unlist(source_nodes_split[2]))
view(source_node_ids)
# Creating edge list
source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x[1,], " - ")
})
view(source_nodes_split)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1]
})
view(source_node_ids)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1]
})
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1]
})
#source_node_ids <- data.frame(unlist(source_nodes_split))
view(source_node_ids)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[,1]
})
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1,]
})
#source_node_ids <- data.frame(unlist(source_nodes_split))
view(source_node_ids)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[,1]
})
#source_node_ids <- data.frame(unlist(source_nodes_split))
view(source_node_ids)
# Creating edge list
source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x[1,], "-")
})
view(source_nodes_split)
# Creating edge list
source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x[1], "-")
})
view(source_nodes_split)
# Creating edge list
source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x[,1], "-")
})
view(source_nodes_split)
# Creating edge list
source_nodes <- weighted[,"Source"]
source_nodes_split <- lapply(source_nodes,
function(x){
str_split(x, "-")
})
view(source_nodes_split)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[,1]
})
weighted <- read_csv("data/weighted.csv")
setwd("C:\Users\30mat\Documents\VUW\Corona Virus Data Analytics\Mapping")
original_csv <- read_csv("weighted123_23_02_2020.csv")
view(head(original_csv, 5))
nodes <- data.frame(nodes = c(original_csv[,"Source"],
original_csv[,"Target"]))
# Extract node ids for source nodes
source_nodes <- nodes[,1]
setwd("C:\Users\30mat\Documents\VUW\Corona Virus Data Analytics\Mapping")
setwd("C:\Users\30mat\Documents\VUW\Corona Virus Data Analytics\Mapping")
setwd("../corona-virus-mapping)
getwd()
da
getwd()
setwd("../corona-virus-mapping")
original_csv <- read_csv("weighted123_23_02_2020.csv")
setwd("../corona-virus-mapping")
getwd()
original_csv <- read_csv("data/weighted123_23_02_2020.csv")
view(head(original_csv, 5))
nodes <- data.frame(nodes = c(original_csv[,"Source"],
original_csv[,"Target"]))
# Extract node ids for source nodes
source_nodes <- nodes[,1]
source_nodes_split <- str_split(source_nodes, "/")
view(source_nodes)
view(source_nodes_split)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1]
})
view(source_node_ids)
source_node_ids <- lapply(source_nodes_split,
function(x){
x[1]
})
source_node_ids_df <- data.frame(unlist(source_node_ids))
view(head(source_node_ids_df, 5))
View(source_node_ids_df)
weighted <- read_csv("data/weighted.csv")
setwd("C:\Users\30mat\Documents\VUW\Corona Virus Data Analytics\Mapping\nz-mapping\data")
setwd("..\nz-mapping\data")
setwd("../nz-mapping/data")
getwd()
setwd("../nz-mapping")
setwd(..)
setwd(../../)
setwd("C:/Users/30mat/Documents/VUW/Corona Virus Data Analytics/Mapping/nz-mapping/data")
weighted <- read_csv("data/weighted.csv")
setwd("C:/Users/30mat/Documents/VUW/Corona Virus Data Analytics/Mapping/nz-mapping")
weighted <- read_csv("data/weighted.csv")
# Creating edge list
nodes <- data.frame(c(weighted[,"Source"],
weighted[,"Target"]))
source_nodes <- nodes[,1]
source_nodes_split <- str_split(source_nodes, "-")
source_node_ids <- lapply(source_nodes_split,
function(x){
x[2]
})
source_node_ids_df <- data.frame(unlist(source_node_ids))
view(head(source_node_ids_df, 5))
# Extract id for target nodes
target_nodes <- nodes[,2]
target_nodes_split <- str_split(target_nodes, "-")
target_node_ids <- lapply(target_nodes_split,
function(x){
x[2]
})
target_node_ids_df <- data.frame(unlist(target_node_ids))
view(head(target_node_ids_df, 5))
# Put columns back together
edge_list <- cbind(source_node_ids_df,
target_node_ids_df,
weighted[,"label"],
weighted[,"weight"])
names(edge_list) <- c("source",
"target",
"label",
"weight")
view(head(edge_list, 10))
# Write edge list into csv
write_csv(edge_list, "nz_edge_list.csv")
library(dplyr)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
maptheme <- theme(panel.grid = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title = element_blank()) +
theme(legend.position = "bottom") +
theme(panel.grid = element_blank()) +
theme(panel.background = element_rect(fill = "#596673")) +
theme(plot.margin = unit(c(0, 0, 0.5, 0), 'cm'))
country_shapes <- geom_polygon(aes(x = long, y = lat, group = group),
data = map_data('world'),
fill = "#CECECE", color = "#515151",
size = 0.15)
mapcoords <- coord_fixed(xlim = c(-150, 180), ylim = c(-55, 80))
# Prepare edge start and end coords
source_nodes <- filter(nodes,
node_id %in% edges$source)
# Prepare edge start and end coords
source_nodes <- filter(nodes,
id %in% edges$source)
target_nodes <- filter(nodes,
id %in% edges$target)
source_node_coords <-
source_nodes %>% select(lon, lat)
names(source_node_coords) <- c("sourceLon",
"sourceLat")
target_node_coords <-
target_nodes %>% select(lon, lat)
names(target_node_coords) <- c("targetLon",
"targetLat")
edge_coords <- cbind(source_node_coords,
target_node_coords)
view(head(edge_coords, 10))
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = location_name),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = region),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
library(dplyr)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
maptheme <- theme(panel.grid = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title = element_blank()) +
theme(legend.position = "bottom") +
theme(panel.grid = element_blank()) +
theme(panel.background = element_rect(fill = "#596673")) +
theme(plot.margin = unit(c(0, 0, 0.5, 0), 'cm'))
country_shapes <- geom_polygon(aes(x = long, y = lat, group = group),
data = map_data('nz'),
fill = "#CECECE", color = "#515151",
size = 0.15)
mapcoords <- coord_fixed(xlim = c(-150, 180), ylim = c(-55, 80))
# Prepare edge start and end coords
source_nodes <- filter(nodes,
id %in% edges$source)
target_nodes <- filter(nodes,
id %in% edges$target)
source_node_coords <-
source_nodes %>% select(lon, lat)
names(source_node_coords) <- c("sourceLon",
"sourceLat")
target_node_coords <-
target_nodes %>% select(lon, lat)
names(target_node_coords) <- c("targetLon",
"targetLat")
edge_coords <- cbind(source_node_coords,
target_node_coords)
view(head(edge_coords, 10))
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = region),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
library(dplyr)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
maptheme <- theme(panel.grid = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title = element_blank()) +
theme(legend.position = "bottom") +
theme(panel.grid = element_blank()) +
theme(panel.background = element_rect(fill = "#596673")) +
theme(plot.margin = unit(c(0, 0, 0.5, 0), 'cm'))
country_shapes <- geom_polygon(aes(x = long, y = lat, group = group),
data = map_data('nz'),
fill = "#CECECE", color = "#515151",
size = 1)
mapcoords <- coord_fixed(xlim = c(-150, 180), ylim = c(-55, 80))
# Prepare edge start and end coords
source_nodes <- filter(nodes,
id %in% edges$source)
target_nodes <- filter(nodes,
id %in% edges$target)
source_node_coords <-
source_nodes %>% select(lon, lat)
names(source_node_coords) <- c("sourceLon",
"sourceLat")
target_node_coords <-
target_nodes %>% select(lon, lat)
names(target_node_coords) <- c("targetLon",
"targetLat")
edge_coords <- cbind(source_node_coords,
target_node_coords)
view(head(edge_coords, 10))
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = region),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
library(dplyr)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
maptheme <- theme(panel.grid = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title = element_blank()) +
theme(legend.position = "bottom") +
theme(panel.grid = element_blank()) +
theme(panel.background = element_rect(fill = "#596673")) +
theme(plot.margin = unit(c(0, 0, 0.5, 0), 'cm'))
country_shapes <- geom_polygon(aes(x = long, y = lat, group = group),
data = map_data('nz'),
fill = "#CECECE", color = "#515151",
size = 100)
mapcoords <- coord_fixed(xlim = c(-150, 180), ylim = c(-55, 80))
# Prepare edge start and end coords
source_nodes <- filter(nodes,
id %in% edges$source)
target_nodes <- filter(nodes,
id %in% edges$target)
source_node_coords <-
source_nodes %>% select(lon, lat)
names(source_node_coords) <- c("sourceLon",
"sourceLat")
target_node_coords <-
target_nodes %>% select(lon, lat)
names(target_node_coords) <- c("targetLon",
"targetLat")
edge_coords <- cbind(source_node_coords,
target_node_coords)
view(head(edge_coords, 10))
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = region),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
library(dplyr)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
maptheme <- theme(panel.grid = element_blank()) +
theme(axis.text = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(axis.title = element_blank()) +
theme(legend.position = "bottom") +
theme(panel.grid = element_blank()) +
theme(panel.background = element_rect(fill = "#596673")) +
theme(plot.margin = unit(c(0, 0, 0.5, 0), 'cm'))
country_shapes <- geom_polygon(aes(x = long, y = lat, group = group),
data = map_data('nz'),
fill = "#CECECE", color = "#515151",
size = 0.15)
mapcoords <- coord_fixed(xlim = c(-150, 180), ylim = c(-55, 80))
# Prepare edge start and end coords
source_nodes <- filter(nodes,
id %in% edges$source)
target_nodes <- filter(nodes,
id %in% edges$target)
source_node_coords <-
source_nodes %>% select(lon, lat)
names(source_node_coords) <- c("sourceLon",
"sourceLat")
target_node_coords <-
target_nodes %>% select(lon, lat)
names(target_node_coords) <- c("targetLon",
"targetLat")
edge_coords <- cbind(source_node_coords,
target_node_coords)
view(head(edge_coords, 10))
# Drawing the map
ggplot(nodes) + country_shapes +
# Draw nodes as points
geom_point(aes(x = lon, y = lat, size = 100),
shape = 21, fill = 'red',
color = 'black', stroke = 0.5) +
# Draw edges as curves
geom_curve(aes(x = sourceLon, y = sourceLat, xend = targetLon + 1, yend = targetLat + 1,
colour = "blue", size = 10),
data = edge_coords, curvature = 0.33,
alpha = 0.5) +
scale_color_manual(values=c("blue")) +
scale_size_continuous(guide = FALSE, range = c(0.25, 2)) +
# Draw labels
geom_text(aes(x = lon, y = lat, label = region),
hjust = 0, nudge_x = 1, nudge_y = 4,
size = 3, color = "white", fontface = "bold") +
mapcoords + maptheme
library(igraph)
library(leaflet)
library(png)
library(plyr)
library(sp)
library(tidyverse)
library(leaflet.extras)
library(htmltools)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
edge_source_target <- cbind(edges[,1], edges[,2])
n <- graph.data.frame(edge_source_target,
directed = TRUE,
vertices = nodes)
network <- get.data.frame(n, "both")
vert <- network$vertices
coordinates(vert) <- ~ lon + lat
edges_igraph <- network$edges
edges_igraph <- cbind(edges_igraph, edges[,4])
edges_igraph <- lapply(1:nrow(edges_igraph),
function(i){
as(rbind(vert[vert$name == edges_igraph[i, "from"], ],
vert[vert$name == edges_igraph[i, "to"], ]),
"SpatialLines")
}
)
for(i in seq_along(edges_igraph)) {
edges_igraph[[i]] <- spChFIDs(edges_igraph[[i]], as.character(i))
}
edges_igraph <- do.call(rbind, edges_igraph)
leaflet(vert) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(data = vert,
popup = ~htmlEscape(location_name),
clusterOptions = markerClusterOptions())%>%
addPolylines(data = edges_igraph, color = "#000000", weight = 0.0001*edges$weight)
library(igraph)
library(leaflet)
library(png)
library(plyr)
library(sp)
library(tidyverse)
library(leaflet.extras)
library(htmltools)
nodes <- read_csv("data/nz_node_list.csv")
edges <- read_csv("data/nz_edge_list.csv")
edge_source_target <- cbind(edges[,1], edges[,2])
n <- graph.data.frame(edge_source_target,
directed = TRUE,
vertices = nodes)
network <- get.data.frame(n, "both")
vert <- network$vertices
coordinates(vert) <- ~ lon + lat
edges_igraph <- network$edges
edges_igraph <- cbind(edges_igraph, edges[,4])
edges_igraph <- lapply(1:nrow(edges_igraph),
function(i){
as(rbind(vert[vert$name == edges_igraph[i, "from"], ],
vert[vert$name == edges_igraph[i, "to"], ]),
"SpatialLines")
}
)
for(i in seq_along(edges_igraph)) {
edges_igraph[[i]] <- spChFIDs(edges_igraph[[i]], as.character(i))
}
edges_igraph <- do.call(rbind, edges_igraph)
leaflet(vert) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(data = vert,
popup = ~htmlEscape(region),
clusterOptions = markerClusterOptions())%>%
addPolylines(data = edges_igraph, color = "#000000", weight = 0.0001*edges$weight)
